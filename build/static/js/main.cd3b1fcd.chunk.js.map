{"version":3,"sources":["components/common/Navbar.js","utils/api.js","components/homePage/FilterOptions.js","components/homePage/HeaderSection.js","components/homePage/NewTile.js","utils/taskTypes.js","components/common/LaunchDate.js","components/common/TileStatusSelect.js","components/homePage/EmptyTile.js","components/common/TaskOrderModal.js","components/homePage/Tile.js","components/homePage/HomePage.js","components/taskPage/TaskPage.js","components/taskPage/NewTaskPage.js","components/taskPage/EditTaskPage.js","App.js","index.js"],"names":["Navbar","className","to","getTilesByStatusRequest","status","a","axios","get","createTileRequest","currentTileStatus","post","deleteTileRequest","tileId","delete","changeTileStatusRequest","newStatus","patch","updateTileLaunchDateRequest","newDate","launch_date","updateTileTaskOrderRequest","newTaskOrder","task_order","getTaskRequest","deleteTaskRequest","createTaskRequest","taskData","updateTaskRequest","id","FilterOptions","filterTiles","onClick","HeaderSection","alt","src","NewTile","props","createTile","taskTypes","0","style","color","1","2","3","LaunchDate","updateTileDate","selected","Date","onChange","date","TileStatusSelect","currentStatus","changeTileStatus","value","e","EmptyTile","deleteTile","TaskOrderModal","state","visible","showModal","tasks","length","setState","handleOk","updateTaskOrder","handleCancel","console","log","taskId","includes","this","taskIndex","title","onOk","onCancel","map","task","indexOf","React","Component","Tile","localTileFilter","useState","setTaskIndex","taskList","setTaskList","setStatus","changeTaskShow","response","data","target","message","success","error","task_type","HomePage","allTiles","setTiles","setTileStatusFilter","getTilelist","useEffect","filteredTiles","filter","tile","newTile","toISOString","TaskPage","setTask","useParams","getTask","deleteTask","history","push","created_at","toLocaleDateString","description","NewTaskPage","userInput","event","inputValue","inputName","name","submitTask","preventDefault","onSubmit","type","EditTaskPage","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd3b1fcd.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\n//  Third party imports\nimport AirplanemodeActiveIcon from '@material-ui/icons/AirplanemodeActive';\nimport AppleIcon from '@material-ui/icons/Apple';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport HomeIcon from '@material-ui/icons/Home';\n\nfunction Navbar() {\n  return (\n    <nav className='animate__animated animate__fadeIn'>\n      <div className='user-details'>\n        <Link to='/'><HomeIcon className='nav-item' /></Link>\n        <AirplanemodeActiveIcon className='nav-item' />\n      </div>\n      <div className='search-fields'>\n        <AppleIcon className='nav-item' />\n        <AssignmentIcon className='nav-item' />\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar","import axios from 'axios'\n\n\n//  ------------------------------------------------------\n//                    TILE API REQUESTS\n//  ------------------------------------------------------\n\n  export const getTilesByStatusRequest = async (status) => {\n      return await axios.get(`/api/tiles/status/${status}/`)\n  }\n\n\n  export const createTileRequest = async (currentTileStatus) => {\n      return await axios.post('/api/tiles/', { status: currentTileStatus })\n  }\n\n  export const deleteTileRequest = async (tileId) => {\n      return await axios.delete(`/api/tiles/${tileId}/`)\n  }\n\n  export const changeTileStatusRequest = async (tileId, newStatus) => {\n      return await axios.patch(`/api/tiles/${tileId}/`, { status: newStatus })\n  }\n\n  export const updateTileLaunchDateRequest = async (tileId, newDate) => {\n      return await axios.patch(`/api/tiles/${tileId}/`, { launch_date: newDate })\n  }\n\n  export const updateTileTaskOrderRequest = async (tileId, newTaskOrder) => {\n    return await axios.patch(`/api/tiles/${tileId}/`, { task_order: newTaskOrder })\n}\n\n//  ------------------------------------------------------\n//                    TASK API REQUESTS\n//  ------------------------------------------------------\n\n  export const getTaskRequest = async (tileId) => {\n      return await axios.get(`/api/tasks/${tileId}/`)\n  }\n\n\n  export const deleteTaskRequest = async (tileId) => {\n      return await axios.delete(`/api/tasks/${tileId}/`)\n  } \n\n  export const createTaskRequest = async (taskData) => {\n      return await axios.post('/api/tasks/', taskData)\n  }\n\n\n  export const updateTaskRequest = async (taskData) => {\n      return await axios.patch(`/api/tasks/${taskData.id}/`, taskData)\n  }","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Third Party Imports\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\n\n/* ------------------------------------------------\n       FILTER OPTIONS - HIGHLIGHTS WHEN ACTIVE\n--------------------------------------------------*/\nfunction FilterOptions({ currentTileStatus, filterTiles }) {\n  return (\n    <ul className='filter-list'>\n    {/* Server will respond with all tiles when 4 is passed as the paramter */}\n      <li id='left-button' className={`filter-list-item ${currentTileStatus === 4 ? 'active' : ''}`} onClick={() => filterTiles(4)}><AllInboxIcon className='filter-icon' /><span className='filter-text'>ALL</span></li>\n\n      <li className={`filter-list-item ${currentTileStatus === 0 ? 'active' : ''}`} onClick={() => filterTiles(0)}><LiveTvIcon className='filter-icon' /><span className='filter-text'>LIVE</span></li>\n\n      <li className={`filter-list-item ${currentTileStatus === 1 ? 'active' : ''}`} onClick={() => filterTiles(1)}><DraftsIcon className='filter-icon' /><span className='filter-text'>DRAFTS</span></li>\n\n      <li className={`filter-list-item ${currentTileStatus === 2 ? 'active' : ''}`} onClick={() => filterTiles(2)}><HourglassEmptyIcon className='filter-icon' /><span className='filter-text'>PENDING</span></li>\n\n      <li id='right-button' className={`filter-list-item ${currentTileStatus === 3 ? 'active' : ''}`} onClick={() => filterTiles(3)}><AllInboxIcon className='filter-icon' /><span className='filter-text'>ARCHIVED</span></li>\n    </ul>\n  )\n}\n\nexport default FilterOptions\n\nFilterOptions.propTypes = {\n  currentTileStatus: PropTypes.number,\n  filterTiles: PropTypes.func.isRequired\n}","import React from 'react'\n\nfunction HeaderSection() {\n  return (\n    <header className=''>\n      <img alt='company-logo' src='https://incling.com/d90b0faba00294578cccd38348ce4dc0.png' className='header-logo animate__animated animate__fadeIn' />\n    </header>\n  )\n}\n\nexport default HeaderSection","import React from 'react'\n\n\nfunction NewTile(props) {\n  return (\n    <div className='tile-container new-tile'>\n      <button className='new-button' onClick={props.createTile}>CREATE A NEW TILE HERE</button>\n  </div>\n  )\n}\n\nexport default NewTile","\nexport const taskTypes = {\n  0 : <p className='task-type' style={{color:'red'}}>Unnassigned</p>,\n  1 : <p className='task-type' style={{color:'green'}}>Survey</p>,\n  2 : <p className='task-type' style={{color:'orange'}}>Discussion</p>,\n  3 : <p className='task-type' style={{color:'blue'}}>Diary</p>\n}","import React from 'react'\n\n//  Third party imports\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\n\n\nfunction LaunchDate({ id, launch_date, updateTileDate }) {\n  return (\n    <span className='tile-date'>Launch Date:<DatePicker className='date-picker' selected={new Date(launch_date)} onChange={date => updateTileDate(id, date)} /></span>\n  )\n}\n\nexport default LaunchDate","import React from 'react'\n\n/* ------------------------------------------------\n        TILE DROPDOWN FOR STATUS SELECTION\n--------------------------------------------------*/\nfunction TileStatusSelect({currentStatus,id,changeTileStatus}) {\n  return (\n    <select value={currentStatus} className='tile-status' onChange={(e) => { changeTileStatus(id, e) }}>\n    <option value='0'>Live</option>\n    <option value='1'>Draft</option>\n    <option value='2'>Pending</option>\n    <option value='3'>Archived</option>\n  </select>\n  )\n}\n\nexport default TileStatusSelect","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// Component Imports\nimport LaunchDate from '../common/LaunchDate'\nimport TileStatusSelect from '../common/TileStatusSelect'\n\n// Third Party Imports\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\n/* ------------------------------------------------\n          DISPLAYS WHEN TILE HAS NO TASKS\n--------------------------------------------------*/\nfunction EmptyTile({id, launch_date, updateTileDate, deleteTile, currentStatus, changeTileStatus}) {\n  return (\n    <div className='tile-container empty-tile animate__animated animate__fadeIn'>\n        <TileStatusSelect currentStatus={currentStatus} id={id} changeTileStatus={changeTileStatus} />\n        <div className='edit-tile-buttons'>\n          <DeleteIcon className='icon-sml' onClick={() => { deleteTile(id) }} />\n        </div>\n        <div className='empty-tile-details'>\n          <p>No tasks in your tile...yet!</p>\n          <Link to={`/tiles/${id}/newtask`}><AddCircleOutlineIcon className='icon-med' /></Link>\n        </div>\n        <LaunchDate id={id} launch_date={launch_date} updateTileDate={updateTileDate} />\n      </div>\n  )\n}\n\nexport default EmptyTile\n","import React from 'react'\n\n//  Third party imports\nimport { Modal } from 'antd';\n\n/* ------------------------------------------------\n           HANDLES THE ORDER OF THE TASKS\n--------------------------------------------------*/\nclass TaskOrderModal extends React.Component {\n  state = {\n    visible: false,\n    task_order: []\n  };\n\n  showModal = () => {\n    if (this.props.tasks.length > 1) {\n      this.setState({\n        visible: true,\n        task_order: []\n      });\n    }\n  };\n\n  handleOk = async () => {\n    if (this.state.task_order.length === this.props.tasks.length) {\n      this.props.updateTaskOrder(this.state.task_order)\n      this.setState({\n        visible: false,\n      });\n    }\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  updateTaskOrder = taskId => {\n    if (!this.state.task_order.includes(taskId)) {\n      console.log(taskId);\n      this.setState({\n        task_order: [...this.state.task_order, taskId]\n      })\n    }\n  }\n\n  render() {\n    const { taskIndex, tasks } = this.props\n    const { task_order } = this.state\n    return (\n      <>\n        <span onClick={this.showModal} className='task-number'>{taskIndex + 1}/{tasks.length}</span>\n        <Modal\n          title=\"Change Task Order, please select all tasks\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          {tasks.map(task => {\n            return (\n              <div key={task.id} className={`task-option ${task_order.includes(task.id) ? 'selected' : ''}`} onClick={() => { this.updateTaskOrder(task.id) }}>\n                <p>{task.title}</p>\n                {task_order.includes(task.id) ? <p>{task_order.indexOf(task.id) + 1}</p> : ''}\n              </div>\n\n            )\n          })}\n\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default TaskOrderModal","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\n// Utility & API Imports\nimport { updateTileTaskOrderRequest, changeTileStatusRequest } from '../../utils/api'\nimport { taskTypes } from '../../utils/taskTypes'\n\n// Component Imports\nimport EmptyTile from './EmptyTile'\nimport LaunchDate from '../common/LaunchDate'\nimport TaskOrderModal from '../common/TaskOrderModal'\nimport TileStatusSelect from '../common/TileStatusSelect'\n\n// Third Party Imports\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { message } from 'antd';\n\n/* ------------------------------------------------\n                  TILE COMPONENT\n--------------------------------------------------*/\nfunction Tile({ tasks, id, launch_date, status, deleteTile, updateTileDate, localTileFilter }) {\n  const [taskIndex, setTaskIndex] = React.useState(0)\n  const [taskList, setTaskList] = React.useState(tasks)\n  const [currentStatus, setStatus] = React.useState(status)\n\n  // switches between tasks in tile\n  const changeTaskShow = (value) => {\n    if (taskIndex + value < taskList.length && taskIndex + value >= 0) { // check that index will not be out of range of array\n      setTaskIndex(taskIndex + value)\n    }\n  }\n\n  const updateTaskOrder = async (newTaskOrder) => {\n    try {\n      const response = await updateTileTaskOrderRequest(id, newTaskOrder)\n      setTaskList(response.data.tasks)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const changeTileStatus = async (tileId, { target }) => {\n    const newStatus = target.value\n    try {\n      await changeTileStatusRequest(tileId, newStatus)\n      setStatus(newStatus) // locally update Tile status\n      message.success('Changed Tile Status');\n      localTileFilter(id) // locally move task out of current status tab, new data will be fetched when status tab changes\n    } catch (err) {\n      console.log(err);\n      message.error('Failed, please try again');\n    }\n  }\n\n  // --------------- IF TILE HAS NO TASKS, RETURN EMPTY TILE --------------------\n  if (taskList.length === 0) {\n    return (\n      <EmptyTile\n        id={id}\n        launch_date={launch_date}\n        updateTileDate={updateTileDate}\n        deleteTile={deleteTile}\n        currentStatus={currentStatus}\n        changeTileStatus={changeTileStatus} />\n    )\n  }\n\n\n  // --------------- IF TILE HAS TASKS, RETURN TASKLIST--------------------\n  return (\n    <div className='tile-container animate__animated animate__fadeIn'>\n      <TileStatusSelect currentStatus={currentStatus} id={id} changeTileStatus={changeTileStatus} />\n      {/* EDIT BUTTONS */}\n      <div className='edit-tile-buttons'>\n        <Link to={`/tiles/${id}/newtask`}><AddCircleOutlineIcon className='icon-sml' /></Link>\n        <DeleteIcon className='icon-sml' onClick={() => { deleteTile(id) }} />\n      </div>\n      <img className='tile-image' alt='random-pic' src='https://res.cloudinary.com/dy7eycl8m/image/upload/v1605042317/stream-5680609_640_uwhrlw.jpg' />\n      {/* MODAL AND TASK ORDER */}\n      <TaskOrderModal taskIndex={taskIndex} tasks={taskList} updateTaskOrder={updateTaskOrder} />\n      {/* TASK TOGGLING ARROWS */}\n      <div className='title-details'>\n        {taskIndex !== 0 ? <ChevronLeftIcon className='change-task-arrow left-arrow icon-arrows' onClick={() => changeTaskShow(-1)} /> : ''}\n        {taskIndex + 1 < taskList.length ? <ChevronRightIcon className='change-task-arrow right-arrow icon-arrows' onClick={() => changeTaskShow(1)} /> : ''}\n        <p className='task-title'>{taskList[taskIndex].title}</p>\n        <p className='task-type'>{taskTypes[taskList[taskIndex].task_type]}</p>\n      </div>\n      <Link className='btn view-button' to={`/${taskList[taskIndex].id}`}>VIEW</Link>\n      <LaunchDate id={id} launch_date={launch_date} updateTileDate={updateTileDate} />\n    </div>\n  )\n}\n\nexport default Tile\n\nTile.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  id: PropTypes.number.isRequired,\n  launch_date: PropTypes.string.isRequired,\n  status: PropTypes.number.isRequired,\n  deleteTile: PropTypes.func.isRequired,\n  updateTileDate: PropTypes.func.isRequired\n}","import React from 'react'\n\n// API Imports\nimport { getTilesByStatusRequest, createTileRequest, deleteTileRequest, updateTileLaunchDateRequest } from '../../utils/api'\n\n// Component Imports\nimport FilterOptions from './FilterOptions'\nimport HeaderSection from './HeaderSection'\nimport NewTile from './NewTile'\nimport Tile from './Tile'\n\n// Third Party Imports\nimport { message } from 'antd';\n\n/* ------------------------------------------------\n               MAIN TILE INDEX VIEW\n--------------------------------------------------*/\nfunction HomePage() {\n  const [allTiles, setTiles] = React.useState([])\n  const [currentTileStatus, setTileStatusFilter] = React.useState(0)\n\n  // get tiles based on the selected tile status tab \n  const getTilelist = async (status) => {\n    try {\n      const response = await getTilesByStatusRequest(status)\n      setTiles(response.data)\n    } catch (err) {\n      console.log(err.response);\n    }\n  }\n\n  // Get live status tiles on component mount\n  React.useEffect(() => {\n    getTilelist(currentTileStatus)\n  }, [currentTileStatus])\n\n\n  const filterTiles = (status) => {\n    setTileStatusFilter(status)\n  }\n\n  // Locally filter tiles away when changed rather than fetching all tiles again, reduce http requests\n  const localTileFilter = (tileId) => {\n    if (currentTileStatus !== 4) {\n      const filteredTiles = allTiles.filter(tile => {\n        if (tile.id !== tileId) return tile\n      })\n      setTiles(filteredTiles)\n    }\n  }\n\n  const createTile = async () => {\n    try {\n      const newTile = await createTileRequest(currentTileStatus)\n      setTiles([...allTiles, newTile.data])\n      message.success('Tile Created!');\n    } catch (err) {\n      console.log(err);\n      message.error('Failed, please try again');\n    }\n  }\n\n  const deleteTile = async (tileId) => {\n    try {\n      await deleteTileRequest(tileId)\n      getTilelist(currentTileStatus)\n    } catch (err) {\n      console.log(err);\n      message.error('Failed, please try again');\n    }\n  }\n\n  const updateTileDate = async (tileId, newDate) => {\n    await updateTileLaunchDateRequest(tileId, newDate.toISOString())\n    try {\n      const response = await getTilesByStatusRequest(currentTileStatus)\n      setTiles(response.data)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div>\n      <HeaderSection />\n      <div className='responsive-container'>\n        <FilterOptions currentTileStatus={currentTileStatus} filterTiles={filterTiles} />\n        {/* CARD SECTION */}\n        <div className='tile-flex-container'>\n          {allTiles.map(tile => {\n            return <Tile key={tile.id} {...tile} deleteTile={deleteTile} localTileFilter={localTileFilter} updateTileDate={updateTileDate} />\n          })}\n          {/* NEW TILE CARD - NOT VISIBLE ON 'ALL' TAB */}\n          {currentTileStatus !== 4 ? <NewTile createTile={createTile} /> : ''}\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\n\nexport default HomePage","import React from 'react'\nimport { useParams, Link } from \"react-router-dom\";\n\n// Utility & API Imports\nimport { getTaskRequest, deleteTaskRequest } from '../../utils/api'\nimport { taskTypes } from '../../utils/taskTypes'\n\n// Third Party Imports\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\n/* ------------------------------------------------\n               VIEW TASK PAGE VIEW\n--------------------------------------------------*/\nfunction TaskPage(props) {\n  const [task, setTask] = React.useState()\n  const { taskId } = useParams()\n\n//  Get task on mount\n  React.useEffect(() => {\n    const getTask = async (taskId) => {\n      const response = await getTaskRequest(taskId)\n      setTask(response.data)\n    }\n    getTask(taskId)\n  }, [taskId])\n\n  const deleteTask = async (taskId) => {\n    await deleteTaskRequest(taskId)\n    props.history.push('/');\n  }\n\n  if (!task) {\n    return null\n  }\n\n  return (\n    <div className='task-container'>\n      <div className='task-section  animate__animated animate__fadeIn'>\n        <h4>{taskTypes[task.task_type]}</h4>\n        <h1>{task.title}</h1>\n        <p>created on {new Date(task.created_at).toLocaleDateString()}</p>\n        <div className='task-options'>\n          <Link to={`/${task.id}/update`}><EditIcon className='icon-large' /></Link>\n          <DeleteIcon className='icon-large' onClick={() => { deleteTask(task.id) }} />\n        </div>\n      </div>\n      <br />\n      <div className='description-section  animate__animated animate__fadeIn'>\n        <p className='task-description-header'>Task Overview</p>\n        <p className='task-description'>{task.description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default TaskPage","import React from 'react'\nimport { useParams } from \"react-router-dom\";\n\n// Utility & API Imports\nimport { createTaskRequest } from '../../utils/api'\n\n// Third Party Imports\nimport { message } from 'antd';\n\n\n/* ------------------------------------------------\n               NEW TASK PAGE VIEW\n--------------------------------------------------*/\nfunction NewTaskPage(props) {\n  const { tileId } = useParams()\n  const [task, setTask] = React.useState({\n    title: '',\n    description: '',\n    task_type: 0,\n    tile: tileId\n  })\n\n  const userInput = (event) => {\n    const inputValue = event.target.value\n    const inputName = event.target.name\n    setTask({ ...task, [inputName]: inputValue })\n  }\n\n  const submitTask = async (e) => {\n    e.preventDefault()\n    try {\n      await createTaskRequest(task)\n      message.success('Task Added!');\n      props.history.push('/');\n    } catch (err) {\n      console.log(err);\n      message.error('Failed, please try again');\n    }\n  }\n\n  return (\n    <div className='task-container'>\n      <div className='task-section animate__animated animate__fadeIn'>\n        <h1>New Task</h1>\n      </div>\n      <br />\n      <div className='description-section animate__animated animate__fadeIn'>\n        <form onSubmit={submitTask}>\n          <label>Task Title</label>\n          <br />\n          <input className='task-input' type='text' name='title' onChange={userInput} value={task.title} />\n          <br />\n          <label>Task Description</label>\n          <br />\n          <textarea className='task-input text-area' name='description' type='textarea' onChange={userInput} value={task.description} />\n          <br />\n          <label>Task Type</label>\n          <br />\n          <select className='task-type-input' name='task_type' onChange={userInput} value={task.task_type} >\n            <option value='0'>Unnassigned</option>\n            <option value='1'>Survey</option>\n            <option value='2'>Discussion</option>\n            <option value='3'>Diary</option>\n          </select>\n          <br />\n          <button className='btn submit-button' type='submit'>Create Task</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default NewTaskPage","import React from 'react'\nimport { useParams } from \"react-router-dom\";\n\n// Utility & API Imports\nimport { getTaskRequest, updateTaskRequest, deleteTaskRequest } from '../../utils/api'\n\n// Third Party Imports\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { message } from 'antd';\n\n\n/* ------------------------------------------------\n               EDIT TASK PAGE VIEW\n--------------------------------------------------*/\nfunction EditTaskPage(props) {\n  const { taskId } = useParams()\n  const [task, setTask] = React.useState()\n\n  // Get task on mount\n  React.useEffect(() => {\n    const getTask = async (taskId) => {\n      try {\n        const response = await getTaskRequest(taskId)\n        setTask(response.data)\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getTask(taskId)\n  }, [taskId])\n\n\n  const userInput = ({ target }) => {\n    const inputValue = target.value\n    const inputName = target.name\n    setTask({ ...task, [inputName]: inputValue })\n  }\n\n\n  const submitTask = async (e) => {\n    e.preventDefault()\n    try {\n      await updateTaskRequest(task)\n      message.success('Task Updated!');\n      props.history.push('/');\n    } catch (err) {\n      console.log(err);\n      message.error('Failed, please try again');\n    }\n  }\n\n  const deleteTask = async (taskId) => {\n    try {\n      await deleteTaskRequest(taskId)\n      message.success('Deleted Successfully!');\n      props.history.push('/');\n    } catch (err) {\n      console.log(err);\n      message.error('Failed, please try again');\n    }\n  }\n\n\n  if (!task) {\n    return null\n  }\n\n  return (\n    <div className='task-container'>\n      <div className='task-section animate__animated animate__fadeIn'>\n        <h1>Update Task</h1>\n        <div className='task-options'>\n          <DeleteIcon className='icon-large' onClick={() => { deleteTask(task.id) }} />\n        </div>\n      </div>\n      <br />\n\n      <div className='description-section animate__animated animate__fadeIn'>\n        <form onSubmit={submitTask}>\n          <label>Task Title</label>\n          <br />\n          <input className='task-input' type='text' name='title' onChange={userInput} value={task.title} />\n          <br />\n          <label>Task Description</label>\n          <br />\n          <textarea className='task-input text-area' name='description' type='textarea' onChange={userInput} value={task.description} />\n          <br />\n          <label>Task Type</label>\n          <br />\n          <select className='task-type-input' name='task_type' onChange={userInput} value={task.task_type} >\n            <option value='0'>Unnassigned</option>\n            <option value='1'>Survey</option>\n            <option value='2'>Discussion</option>\n            <option value='3'>Diary</option>\n          </select>\n          <br />\n          <button className='btn submit-button' type='submit'>Update Task</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\n\nexport default EditTaskPage\n\n","import React from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\n\n//  Views / Pages Imports\nimport Navbar from './components/common/Navbar'\nimport HomePage from './components/homePage/HomePage'\nimport TaskPage from './components/taskPage/TaskPage'\nimport NewTaskPage from './components/taskPage/NewTaskPage'\nimport EditTaskPage from './components/taskPage/EditTaskPage'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Navbar />\n    <Switch>\n      <Route exact path='/:taskId' component={TaskPage} />\n      <Route exact path='/:taskId/update' component={EditTaskPage} />\n      <Route exact path='/:tiles/:tileId/newtask' component={NewTaskPage} />\n      <Route exact path='/' component={HomePage} />\n      <Route exact path='/*' component={HomePage} />\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// StyleSheet Imports\nimport './styles/main.scss'\nimport './styles/homePage.scss'\nimport './styles/taskPage.scss'\nimport './styles/tile.scss'\nimport './styles/navbar.scss'\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}